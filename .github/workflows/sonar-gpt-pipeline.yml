name: üîê SonarQube + GPT-4 Chunked Review

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  analyze-report:
    runs-on: ubuntu-latest

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      AZURE_FUNCTION_URL: ${{ secrets.AZURE_FUNCTION_URL }}
      AZURE_BLOB_SAS_URL: ${{ secrets.AZURE_BLOB_SAS_URL }}

    steps:
      - name: üõéÔ∏è Checkout Code
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: üîß Restore Dependencies
        run: dotnet restore

      - name: üèóÔ∏è Build Project
        run: dotnet build --no-restore

      - name: üß™ SonarQube Scan
        run: |
          dotnet tool install --global dotnet-sonarscanner
          export PATH="$PATH:/home/runner/.dotnet/tools"
          dotnet sonarscanner begin /k:"your-project-key" /d:sonar.login="$SONAR_TOKEN" /d:sonar.host.url="$SONAR_HOST_URL"
          dotnet build
          dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"

      - name: üì• Retrieve SonarQube Report
        run: |
          mkdir -p reports
          cp sonar-report-20250606-023250.json reports/sonar-report.json

      # ‚úÖ Beautify SonarQube JSON report before uploading
      - name: üìù Beautify and upload SonarQube report to Azure Blob
        run: |
          jq '.' reports/sonar-report.json > reports/beautified-sonar-report.json
          AZURE_BLOB_BASE="${{ secrets.AZURE_BLOB_SAS_URL }}"
          DATE=$(date +'%Y%m%d')
          curl -X PUT -T reports/beautified-sonar-report.json "${AZURE_BLOB_BASE}/sonar-reports/beautified-sonar-report-$DATE.json"

      # ‚úÖ Splitting the report into manageable chunks
      - name: üî™ Split SonarQube Report into chunks
        run: |
          mkdir -p chunks
          jq -c '.issues[]' reports/beautified-sonar-report.json | split -l 40 - chunks/chunk-

      # ‚úÖ Analyze each chunk with GPT-4
      - name: üåÄ GPT-4 analysis for each chunk
        run: |
          mkdir -p summaries
          PROMPT="You are a secure code reviewer with deep knowledge of software vulnerabilities. Given the SonarQube issues, perform:
          1. Identify critical and major issues with explanations.
          2. Summarize code quality concerns per module.
          3. Provide actionable recommendations in markdown."

          for chunk_file in chunks/chunk-*; do
            payload=$(jq -n --arg prompt "$PROMPT" --slurpfile report "$chunk_file" '{prompt: $prompt, report: $report}')
            
            RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "$AZURE_FUNCTION_URL" \
              -H "Content-Type: application/json" -d "$payload")

            BODY=$(echo "$RESPONSE" | sed '$d')
            STATUS=$(echo "$RESPONSE" | tail -n1)

            CHUNK_ID=$(basename $chunk_file)
            echo "Status for $CHUNK_ID: $STATUS"
            echo "$BODY" > summaries/summary-$CHUNK_ID.md

            if [ "$STATUS" -ne 200 ]; then
              echo "GPT-4 analysis failed on $CHUNK_ID"
              exit 1
            fi

            sleep 5
          done

      # ‚úÖ Combine GPT-4 markdown summaries
      - name: üìö Merge GPT-4 summaries
        run: |
          mkdir -p final-report
          cat summaries/summary-chunk-*.md > final-report/complete-gpt-summary.md

      # ‚úÖ Convert markdown summary to DOCX
      - name: üìÑ Convert markdown summary to DOCX
        run: |
          sudo apt-get update
          sudo apt-get install pandoc -y
          pandoc final-report/complete-gpt-summary.md -o final-report/Secure_Code_Review_Report.docx

      # ‚úÖ Upload final markdown and DOCX reports to Azure Blob
      - name: ‚òÅÔ∏è Upload final GPT-4 reports to Azure Blob
        run: |
          AZURE_BLOB_BASE="${{ secrets.AZURE_BLOB_SAS_URL }}"
          DATE=$(date +'%Y%m%d')
          curl -X PUT -T final-report/complete-gpt-summary.md "${AZURE_BLOB_BASE}/gpt-summaries/complete-gpt-summary-$DATE.md"
          curl -X PUT -T final-report/Secure_Code_Review_Report.docx "${AZURE_BLOB_BASE}/gpt-docs/Secure_Code_Review_Report-$DATE.docx"
